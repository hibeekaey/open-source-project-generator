name: Mobile CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'Mobile/**'
      - '.github/workflows/ci-mobile.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'Mobile/**'

env:
  JAVA_VERSION: '17'
  KOTLIN_VERSION: '{{.Versions.Kotlin}}'
  SWIFT_VERSION: '{{.Versions.Swift}}'

jobs:
{{if .Components.Mobile.Android}}
  test-android:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup JDK
      uses: actions/setup-java@v3
      with:
        java-version: {{`${{ env.JAVA_VERSION }}`}}
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: {{`${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}`}}
        restore-keys: |
          {{`${{ runner.os }}-gradle-`}}

    - name: Grant execute permission for gradlew
      run: chmod +x Mobile/Android/gradlew
      working-directory: .

    - name: Run Android lint
      run: |
        cd Mobile/Android
        ./gradlew lint

    - name: Run unit tests
      run: |
        cd Mobile/Android
        ./gradlew test

    - name: Run instrumented tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 33
        target: google_apis
        arch: x86_64
        profile: Nexus 6
        script: |
          cd Mobile/Android
          ./gradlew connectedAndroidTest

    - name: Upload test reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: android-test-reports
        path: Mobile/Android/app/build/reports/

    - name: Build APK
      run: |
        cd Mobile/Android
        ./gradlew assembleDebug

    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: android-apk
        path: Mobile/Android/app/build/outputs/apk/debug/app-debug.apk
{{end}}

{{if .Components.Mobile.IOS}}
  test-ios:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable

    - name: Install CocoaPods
      run: |
        cd Mobile/iOS
        pod install

    - name: Build iOS app
      run: |
        cd Mobile/iOS
        xcodebuild -workspace {{.Name}}.xcworkspace \
          -scheme {{.Name}} \
          -destination 'platform=iOS Simulator,name=iPhone 14,OS=latest' \
          build

    - name: Run iOS tests
      run: |
        cd Mobile/iOS
        xcodebuild -workspace {{.Name}}.xcworkspace \
          -scheme {{.Name}} \
          -destination 'platform=iOS Simulator,name=iPhone 14,OS=latest' \
          test

    - name: Upload test reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: ios-test-reports
        path: Mobile/iOS/build/reports/

    - name: Build IPA
      run: |
        cd Mobile/iOS
        xcodebuild -workspace {{.Name}}.xcworkspace \
          -scheme {{.Name}} \
          -configuration Release \
          -destination generic/platform=iOS \
          -archivePath {{.Name}}.xcarchive \
          archive

    - name: Export IPA
      run: |
        cd Mobile/iOS
        xcodebuild -exportArchive \
          -archivePath {{.Name}}.xcarchive \
          -exportPath . \
          -exportOptionsPlist ExportOptions.plist

    - name: Upload IPA
      uses: actions/upload-artifact@v3
      with:
        name: ios-ipa
        path: Mobile/iOS/{{.Name}}.ipa
{{end}}

  mobile-security-scan:
    runs-on: ubuntu-latest
    {{if and .Components.Mobile.Android .Components.Mobile.IOS}}needs: [test-android, test-ios]{{else if .Components.Mobile.Android}}needs: test-android{{else if .Components.Mobile.IOS}}needs: test-ios{{end}}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

{{if .Components.Mobile.Android}}
    - name: Run MobSF Android scan
      uses: fundacaocerti/mobsf-action@v1.7.1
      with:
        input-file-path: Mobile/Android/app/build/outputs/apk/debug/app-debug.apk
        mobsf-url: https://mobsf.live
        mobsf-api-key: {{`${{ secrets.MOBSF_API_KEY }}`}}
{{end}}

{{if .Components.Mobile.IOS}}
    - name: Run MobSF iOS scan
      uses: fundacaocerti/mobsf-action@v1.7.1
      with:
        input-file-path: Mobile/iOS/{{.Name}}.ipa
        mobsf-url: https://mobsf.live
        mobsf-api-key: {{`${{ secrets.MOBSF_API_KEY }}`}}
{{end}}