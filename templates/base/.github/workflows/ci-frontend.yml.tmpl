name: Frontend CI

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'App/**'
      - 'Home/**'
      - 'Admin/**'
      - 'package.json'
      - 'package-lock.json'
      - '.github/workflows/ci-frontend.yml'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'App/**'
      - 'Home/**'
      - 'Admin/**'
      - 'package.json'
      - 'package-lock.json'

env:
  NODE_VERSION: '{{.Versions.Node}}'

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [App, Home{{if .Components.Frontend.Admin}}, Admin{{end}}]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '{{.Versions.Node}}'
        cache: 'npm'
        cache-dependency-path: '${{`{{ matrix.app }}`}}/package-lock.json'

    - name: Install dependencies
      run: |
        cd ${{`{{ matrix.app }}`}}
        npm ci

    - name: Run linting
      run: |
        cd ${{`{{ matrix.app }}`}}
        npm run lint

    - name: Run type checking
      run: |
        cd ${{`{{ matrix.app }}`}}
        npm run type-check

    - name: Run tests
      run: |
        cd ${{`{{ matrix.app }}`}}
        npm run test:ci

    - name: Build application
      run: |
        cd ${{`{{ matrix.app }}`}}
        npm run build

    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ${{`{{ matrix.app }}`}}/coverage/lcov.info
        flags: frontend-${{`{{ matrix.app }}`}}
        name: ${{`{{ matrix.app }}`}}-coverage

  lighthouse-audit:
    runs-on: ubuntu-latest
    needs: test-frontend
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '{{.Versions.Node}}'
        cache: 'npm'
        cache-dependency-path: 'App/package-lock.json'

    - name: Install dependencies
      run: |
        cd App
        npm ci

    - name: Build application
      run: |
        cd App
        npm run build

    - name: Run Lighthouse CI
      uses: treosh/lighthouse-ci-action@v10
      with:
        configPath: './App/lighthouserc.json'
        uploadArtifacts: true
        temporaryPublicStorage: true

  accessibility-test:
    runs-on: ubuntu-latest
    needs: test-frontend
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '{{.Versions.Node}}'
        cache: 'npm'
        cache-dependency-path: 'App/package-lock.json'

    - name: Install dependencies
      run: |
        cd App
        npm ci

    - name: Build application
      run: |
        cd App
        npm run build

    - name: Start application
      run: |
        cd App
        npm start &
        sleep 10

    - name: Run accessibility tests
      run: |
        cd App
        npm run test:a11y