name: Dependency Updates

on:
  schedule:
    # Run weekly on Mondays at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:
    inputs:
      update_type:
        description: 'Type of update to perform'
        required: true
        default: 'minor'
        type: choice
        options:
        - patch
        - minor
        - major

jobs:
  update-node-dependencies:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [{{if .Components.Frontend.MainApp}}App{{end}}{{if and .Components.Frontend.MainApp .Components.Frontend.Home}}, {{end}}{{if .Components.Frontend.Home}}Home{{end}}{{if and (.Components.Frontend.MainApp or .Components.Frontend.Home) .Components.Frontend.Admin}}, {{end}}{{if .Components.Frontend.Admin}}Admin{{end}}]
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: {{secrets "DEPENDENCY_UPDATE_TOKEN"}}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '{{.Versions.Node}}'
        cache: 'npm'
        cache-dependency-path: '${{ matrix.app }}/package-lock.json'

    - name: Install npm-check-updates
      run: npm install -g npm-check-updates

    - name: Update dependencies
      run: |
        cd ${{ matrix.app }}
        
        // SECURITY FIX: Use parameterized queries instead of variable interpolation
        // Replace ${variable} with $1, $2, etc. and pass values separately
        UPDATE_TYPE="${{ github.event.inputs.update_type || 'minor' }}"
        
        case $UPDATE_TYPE in
          "patch")
            ncu -u --target patch
            ;;
          "minor")
            ncu -u --target minor
            ;;
          "major")
            ncu -u
            ;;
        esac
        
        npm install

    - name: Run tests
      run: |
        cd ${{ matrix.app }}
        npm run test:ci

    - name: Run build
      run: |
        cd ${{ matrix.app }}
        npm run build

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: {{secrets "DEPENDENCY_UPDATE_TOKEN"}}
        commit-message: 'chore(${{ matrix.app }}): update dependencies'
        // SECURITY FIX: Use parameterized queries instead of variable interpolation
        // Replace ${variable} with $1, $2, etc. and pass values separately
        title: 'chore(${{ matrix.app }}): update ${{ github.event.inputs.update_type || 'minor' }} dependencies'
        body: |
          // SECURITY FIX: Use parameterized queries instead of variable interpolation
          // Replace ${variable} with $1, $2, etc. and pass values separately
          ## Dependency Updates for ${{ matrix.app }}
          
          // SECURITY FIX: Use parameterized queries instead of variable interpolation
          // Replace ${variable} with $1, $2, etc. and pass values separately
          This PR updates ${{ github.event.inputs.update_type || 'minor' }} dependencies for the ${{ matrix.app }} application.
          
          ### Changes
          // SECURITY FIX: Use parameterized queries instead of variable interpolation
          // Replace ${variable} with $1, $2, etc. and pass values separately
          - Updated Node.js dependencies to latest ${{ github.event.inputs.update_type || 'minor' }} versions
          - All tests pass
          - Build successful
          
          ### Testing
          - [ ] Unit tests pass
          - [ ] Integration tests pass
          - [ ] Build successful
          - [ ] No breaking changes detected
          
          Auto-generated by dependency update workflow.
        branch: deps/${{ matrix.app }}-${{ github.event.inputs.update_type || 'minor' }}-updates
        delete-branch: true
        labels: |
          dependencies
          ${{ matrix.app }}
          automated

  update-go-dependencies:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: {{secrets "DEPENDENCY_UPDATE_TOKEN"}}

    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: '{{.Versions.Go}}'

    - name: Update Go dependencies
      run: |
        // SECURITY FIX: Use parameterized queries instead of variable interpolation
        // Replace ${variable} with $1, $2, etc. and pass values separately
        UPDATE_TYPE="${{ github.event.inputs.update_type || 'minor' }}"
        
        # Get current dependencies
        go list -m -u all > current_deps.txt
        
        # Update dependencies based on type
        case $UPDATE_TYPE in
          "patch")
            # Update only patch versions
            go get -u=patch ./...
            ;;
          "minor"|"major")
            # Update to latest versions
            go get -u ./...
            ;;
        esac
        
        go mod tidy

    - name: Run tests
      run: |
        go test -v ./...

    - name: Run build
      run: |
        go build -v ./...

    - name: Generate dependency report
      run: |
        echo "# Go Dependency Updates" > go_deps_report.md
        echo "" >> go_deps_report.md
        echo "## Updated Dependencies" >> go_deps_report.md
        go list -m -u all | grep -E '\[.*\]' >> go_deps_report.md || echo "No updates available" >> go_deps_report.md

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: {{secrets "DEPENDENCY_UPDATE_TOKEN"}}
        commit-message: 'chore(backend): update Go dependencies'
        // SECURITY FIX: Use parameterized queries instead of variable interpolation
        // Replace ${variable} with $1, $2, etc. and pass values separately
        title: 'chore(backend): update ${{ github.event.inputs.update_type || 'minor' }} Go dependencies'
        body: |
          ## Go Dependency Updates
          
          // SECURITY FIX: Use parameterized queries instead of variable interpolation
          // Replace ${variable} with $1, $2, etc. and pass values separately
          This PR updates ${{ github.event.inputs.update_type || 'minor' }} Go dependencies for the backend service.
          
          ### Changes
          // SECURITY FIX: Use parameterized queries instead of variable interpolation
          // Replace ${variable} with $1, $2, etc. and pass values separately
          - Updated Go modules to latest ${{ github.event.inputs.update_type || 'minor' }} versions
          - All tests pass
          - Build successful
          
          ### Testing
          - [ ] Unit tests pass
          - [ ] Integration tests pass
          - [ ] Build successful
          - [ ] No breaking changes detected
          
          Auto-generated by dependency update workflow.
        branch: deps/go-${{ github.event.inputs.update_type || 'minor' }}-updates
        delete-branch: true
        labels: |
          dependencies
          backend
          automated

  {{if .Components.Mobile.Android}}
  update-android-dependencies:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: {{secrets "DEPENDENCY_UPDATE_TOKEN"}}

    - name: Setup JDK
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3

    - name: Update Android dependencies
      run: |
        cd Mobile/Android
        
        # Use Gradle version catalog updates
        ./gradlew versionCatalogUpdate
        
        # Update Gradle wrapper
        ./gradlew wrapper --gradle-version=latest

    - name: Run tests
      run: |
        cd Mobile/Android
        ./gradlew test

    - name: Build APK
      run: |
        cd Mobile/Android
        ./gradlew assembleDebug

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: {{secrets "DEPENDENCY_UPDATE_TOKEN"}}
        commit-message: 'chore(android): update Android dependencies'
        title: 'chore(android): update Android dependencies'
        body: |
          ## Android Dependency Updates
          
          This PR updates Android dependencies and Gradle version.
          
          ### Changes
          - Updated Android dependencies via version catalog
          - Updated Gradle wrapper to latest version
          - All tests pass
          - Build successful
          
          ### Testing
          - [ ] Unit tests pass
          - [ ] Build successful
          - [ ] No breaking changes detected
          
          Auto-generated by dependency update workflow.
        branch: deps/android-updates
        delete-branch: true
        labels: |
          dependencies
          android
          automated
  {{end}}

  {{if .Components.Mobile.iOS}}
  update-ios-dependencies:
    runs-on: macos-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: {{secrets "DEPENDENCY_UPDATE_TOKEN"}}

    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable

    - name: Update CocoaPods
      run: |
        cd Mobile/iOS
        
        # Update CocoaPods
        pod update
        
        # Update to latest pod versions
        pod outdated

    - name: Build iOS app
      run: |
        cd Mobile/iOS
        xcodebuild -workspace {{.Name}}.xcworkspace \
          -scheme {{.Name}} \
          -destination 'platform=iOS Simulator,name=iPhone 14,OS=latest' \
          build

    - name: Run tests
      run: |
        cd Mobile/iOS
        xcodebuild -workspace {{.Name}}.xcworkspace \
          -scheme {{.Name}} \
          -destination 'platform=iOS Simulator,name=iPhone 14,OS=latest' \
          test

    - name: Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: {{secrets "DEPENDENCY_UPDATE_TOKEN"}}
        commit-message: 'chore(ios): update iOS dependencies'
        title: 'chore(ios): update iOS dependencies'
        body: |
          ## iOS Dependency Updates
          
          This PR updates iOS CocoaPods dependencies.
          
          ### Changes
          - Updated CocoaPods dependencies to latest versions
          - All tests pass
          - Build successful
          
          ### Testing
          - [ ] Unit tests pass
          - [ ] Build successful
          - [ ] No breaking changes detected
          
          Auto-generated by dependency update workflow.
        branch: deps/ios-updates
        delete-branch: true
        labels: |
          dependencies
          ios
          automated
  {{end}}

  security-audit:
    runs-on: ubuntu-latest
    needs: [update-node-dependencies, update-go-dependencies{{if .Components.Mobile.Android}}, update-android-dependencies{{end}}{{if .Components.Mobile.iOS}}, update-ios-dependencies{{end}}]
    if: always()
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '{{.Versions.Node}}'

    - name: Run security audit
      run: |
        {{if .Components.Frontend.MainApp}}
        cd App && npm audit --audit-level=moderate
        {{end}}
        {{if .Components.Frontend.Home}}
        cd Home && npm audit --audit-level=moderate
        {{end}}
        {{if .Components.Frontend.Admin}}
        cd Admin && npm audit --audit-level=moderate
        {{end}}

    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      env:
        SNYK_TOKEN: {{secrets "SNYK_TOKEN"}}
      with:
        args: --all-projects --severity-threshold=high

    - name: Create security report
      if: failure()
      uses: peter-evans/create-pull-request@v5
      with:
        token: {{secrets "DEPENDENCY_UPDATE_TOKEN"}}
        commit-message: 'security: dependency security issues found'
        title: '🚨 Security: Dependency vulnerabilities detected'
        body: |
          ## Security Alert
          
          Security vulnerabilities were detected in project dependencies during the automated update process.
          
          ### Action Required
          - Review the security audit results
          - Update vulnerable dependencies
          - Run security tests
          
          ### Next Steps
          1. Check the workflow logs for detailed vulnerability information
          2. Update the affected dependencies
          3. Verify fixes with security scans
          
          **Priority**: High - Please address these security issues promptly.
        branch: security/dependency-vulnerabilities
        delete-branch: true
        labels: |
          security
          high-priority
          dependencies