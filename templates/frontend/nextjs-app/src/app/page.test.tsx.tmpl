import { render, screen } from '@testing-library/react'
import HomePage from './page'

// Mock the ProjectConfig data
const mockConfig = {
  Name: '{{.Name}}',
  Description: '{{.Description}}',
  Repository: '{{if .Repository}}{{.Repository}}{{end}}',
  Versions: {
    NextJS: '15.5.3',
    React: '19.1.0'
  }
}

// Mock the template variables for testing
jest.mock('next/link', () => {
  return ({ children, href, ...props }: any) => {
    return <a href={href} {...props}>{children}</a>
  }
})

describe('HomePage', () => {
  it('renders the main heading', () => {
    render(<HomePage />)
    
    const heading = screen.getByRole('heading', { level: 1 })
    expect(heading).toBeInTheDocument()
    expect(heading).toHaveTextContent('{{.Name}}')
  })

  it('renders the description', () => {
    render(<HomePage />)
    
    const description = screen.getByText('{{.Description}}')
    expect(description).toBeInTheDocument()
  })

  it('renders the get started button', () => {
    render(<HomePage />)
    
    const button = screen.getByRole('button', { name: /get started/i })
    expect(button).toBeInTheDocument()
  })

  {{if .Repository}}it('renders the GitHub link when repository is provided', () => {
    render(<HomePage />)
    
    const githubLink = screen.getByRole('link', { name: /view on github/i })
    expect(githubLink).toBeInTheDocument()
    expect(githubLink).toHaveAttribute('href', '{{.Repository}}')
  }){{end}}

  it('renders the feature cards', () => {
    render(<HomePage />)
    
    expect(screen.getByText('Fast Development')).toBeInTheDocument()
    expect(screen.getByText('Beautiful UI')).toBeInTheDocument()
    expect(screen.getByText('Developer Ready')).toBeInTheDocument()
  })

  it('renders the tech stack badges', () => {
    render(<HomePage />)
    
    expect(screen.getByText('Next.js 15.5.2')).toBeInTheDocument()
    expect(screen.getByText('React 19.1.0')).toBeInTheDocument()
    expect(screen.getByText('TypeScript')).toBeInTheDocument()
    expect(screen.getByText('Tailwind CSS')).toBeInTheDocument()
  })
})