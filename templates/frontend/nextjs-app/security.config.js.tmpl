/**
 * Security Configuration for {{.Name}}
 * Comprehensive security settings including CSP, security headers, and session configuration
 */

// Content Security Policy Configuration
const getContentSecurityPolicy = (env = 'production') => {
  const isDevelopment = env === 'development';
  
  // Base CSP directives
  const csp = {
    'default-src': ["'self'"],
    'script-src': isDevelopment 
      ? ["'self'", "'unsafe-eval'", "'unsafe-inline'"] 
      : ["'self'", "'nonce-{{nonce}}'"],
    'style-src': ["'self'", "'unsafe-inline'"],
    'img-src': ["'self'", "data:", "https:"],
    'font-src': ["'self'", "https:"],
    'connect-src': isDevelopment 
      ? ["'self'", "ws:", "wss:", "http://localhost:*"]
      : ["'self'", "https:"],
    'frame-ancestors': ["'none'"],
    'base-uri': ["'self'"],
    'form-action': ["'self'"],
    'object-src': ["'none'"]
  };

  // Add upgrade-insecure-requests in production
  if (!isDevelopment) {
    csp['upgrade-insecure-requests'] = [];
  }

  // Convert to CSP string
  return Object.entries(csp)
    .map(([key, values]) => {
      if (values.length === 0) return key;
      return `${key} ${values.join(' ')}`;
    })
    .join('; ');
};

module.exports = {
  getContentSecurityPolicy
};