# {{.Name}} - Terraform Outputs
# This file defines all output values from the infrastructure

# Cluster information
output "cluster_name" {
  description = "Name of the Kubernetes cluster"
  value       = local.cluster_name
}

output "cluster_endpoint" {
  description = "Endpoint for the Kubernetes cluster"
  value = var.cloud_provider == "aws" ? (
    length(module.aws_infrastructure) > 0 ? module.aws_infrastructure[0].cluster_endpoint : null
  ) : var.cloud_provider == "gcp" ? (
    length(module.gcp_infrastructure) > 0 ? module.gcp_infrastructure[0].cluster_endpoint : null
  ) : (
    length(module.azure_infrastructure) > 0 ? module.azure_infrastructure[0].cluster_endpoint : null
  )
  sensitive = true
}

output "cluster_security_group_id" {
  description = "Security group ID for the cluster"
  value = var.cloud_provider == "aws" ? (
    length(module.aws_infrastructure) > 0 ? module.aws_infrastructure[0].cluster_security_group_id : null
  ) : null
}

output "cluster_iam_role_arn" {
  description = "IAM role ARN for the cluster (AWS only)"
  value = var.cloud_provider == "aws" ? (
    length(module.aws_infrastructure) > 0 ? module.aws_infrastructure[0].cluster_iam_role_arn : null
  ) : null
}

# Network information
output "vpc_id" {
  description = "ID of the VPC"
  value = var.cloud_provider == "aws" ? (
    length(module.aws_infrastructure) > 0 ? module.aws_infrastructure[0].vpc_id : null
  ) : var.cloud_provider == "gcp" ? (
    length(module.gcp_infrastructure) > 0 ? module.gcp_infrastructure[0].network_name : null
  ) : (
    length(module.azure_infrastructure) > 0 ? module.azure_infrastructure[0].vnet_id : null
  )
}

output "private_subnet_ids" {
  description = "IDs of the private subnets"
  value = var.cloud_provider == "aws" ? (
    length(module.aws_infrastructure) > 0 ? module.aws_infrastructure[0].private_subnet_ids : []
  ) : var.cloud_provider == "gcp" ? (
    length(module.gcp_infrastructure) > 0 ? module.gcp_infrastructure[0].subnet_names : []
  ) : (
    length(module.azure_infrastructure) > 0 ? module.azure_infrastructure[0].subnet_ids : []
  )
}

output "public_subnet_ids" {
  description = "IDs of the public subnets"
  value = var.cloud_provider == "aws" ? (
    length(module.aws_infrastructure) > 0 ? module.aws_infrastructure[0].public_subnet_ids : []
  ) : []
}

# Database information
output "database_endpoint" {
  description = "Database endpoint"
  value = var.cloud_provider == "aws" ? (
    length(module.aws_infrastructure) > 0 ? module.aws_infrastructure[0].db_host : null
  ) : var.cloud_provider == "gcp" ? (
    length(module.gcp_infrastructure) > 0 ? module.gcp_infrastructure[0].db_host : null
  ) : (
    length(module.azure_infrastructure) > 0 ? module.azure_infrastructure[0].db_host : null
  )
  sensitive = true
}

output "database_port" {
  description = "Database port"
  value = 5432
}

output "database_name" {
  description = "Database name"
  value = local.db_name
}

output "database_username" {
  description = "Database username"
  value = local.db_username
  sensitive = true
}

# Redis information
output "redis_endpoint" {
  description = "Redis endpoint"
  value = var.cloud_provider == "aws" ? (
    length(module.aws_infrastructure) > 0 ? module.aws_infrastructure[0].redis_host : null
  ) : var.cloud_provider == "gcp" ? (
    length(module.gcp_infrastructure) > 0 ? module.gcp_infrastructure[0].redis_host : null
  ) : (
    length(module.azure_infrastructure) > 0 ? module.azure_infrastructure[0].redis_host : null
  )
  sensitive = true
}

output "redis_port" {
  description = "Redis port"
  value = 6379
}

# Load balancer information
output "load_balancer_dns" {
  description = "DNS name of the load balancer"
  value = var.cloud_provider == "aws" ? (
    length(module.aws_infrastructure) > 0 ? module.aws_infrastructure[0].load_balancer_dns : null
  ) : var.cloud_provider == "gcp" ? (
    length(module.gcp_infrastructure) > 0 ? module.gcp_infrastructure[0].load_balancer_ip : null
  ) : (
    length(module.azure_infrastructure) > 0 ? module.azure_infrastructure[0].load_balancer_ip : null
  )
}

output "load_balancer_zone_id" {
  description = "Zone ID of the load balancer (AWS only)"
  value = var.cloud_provider == "aws" ? (
    length(module.aws_infrastructure) > 0 ? module.aws_infrastructure[0].load_balancer_zone_id : null
  ) : null
}

# Application URLs
{{if .Components.Frontend.MainApp}}
output "app_url" {
  description = "URL for the main application"
  value = "https://${var.domain_name}"
}
{{end}}

{{if .Components.Frontend.Home}}
output "home_url" {
  description = "URL for the home/landing page"
  value = "https://home.${var.domain_name}"
}
{{end}}

{{if .Components.Frontend.Admin}}
output "admin_url" {
  description = "URL for the admin dashboard"
  value = "https://admin.${var.domain_name}"
}
{{end}}

{{if .Components.Backend.API}}
output "api_url" {
  description = "URL for the API"
  value = "https://${var.domain_name}/api"
}
{{end}}

# Monitoring URLs
output "grafana_url" {
  description = "URL for Grafana dashboard"
  value = var.enable_monitoring ? "https://internal.${var.domain_name}/grafana" : null
}

output "prometheus_url" {
  description = "URL for Prometheus"
  value = var.enable_monitoring ? "https://internal.${var.domain_name}/prometheus" : null
}

# SSL Certificate information
output "ssl_certificate_arn" {
  description = "ARN of the SSL certificate"
  value = var.cloud_provider == "aws" ? (
    length(module.aws_infrastructure) > 0 ? module.aws_infrastructure[0].ssl_certificate_arn : null
  ) : null
}

# DNS information
output "route53_zone_id" {
  description = "Route53 hosted zone ID (AWS only)"
  value = var.cloud_provider == "aws" && var.create_route53_zone ? (
    length(module.aws_infrastructure) > 0 ? module.aws_infrastructure[0].route53_zone_id : null
  ) : null
}

output "nameservers" {
  description = "Nameservers for the domain"
  value = var.cloud_provider == "aws" && var.create_route53_zone ? (
    length(module.aws_infrastructure) > 0 ? module.aws_infrastructure[0].nameservers : []
  ) : []
}

# Security information
output "waf_web_acl_arn" {
  description = "ARN of the WAF Web ACL"
  value = var.enable_waf && var.cloud_provider == "aws" ? (
    length(module.aws_infrastructure) > 0 ? module.aws_infrastructure[0].waf_web_acl_arn : null
  ) : null
}

# Backup information
output "backup_vault_arn" {
  description = "ARN of the backup vault"
  value = var.enable_backups && var.cloud_provider == "aws" ? (
    length(module.aws_infrastructure) > 0 ? module.aws_infrastructure[0].backup_vault_arn : null
  ) : null
}

# Kubernetes configuration
output "kubeconfig" {
  description = "Kubernetes configuration for kubectl"
  value = var.cloud_provider == "aws" ? (
    length(module.aws_infrastructure) > 0 ? module.aws_infrastructure[0].kubeconfig : null
  ) : var.cloud_provider == "gcp" ? (
    length(module.gcp_infrastructure) > 0 ? module.gcp_infrastructure[0].kubeconfig : null
  ) : (
    length(module.azure_infrastructure) > 0 ? module.azure_infrastructure[0].kubeconfig : null
  )
  sensitive = true
}

# Resource information
output "resource_group_name" {
  description = "Name of the resource group (Azure only)"
  value = var.cloud_provider == "azure" ? (
    length(module.azure_infrastructure) > 0 ? module.azure_infrastructure[0].resource_group_name : null
  ) : null
}

output "project_id" {
  description = "GCP project ID"
  value = var.cloud_provider == "gcp" ? var.gcp_project_id : null
}

# Cost information
output "estimated_monthly_cost" {
  description = "Estimated monthly cost (USD)"
  value = var.cloud_provider == "aws" ? (
    length(module.aws_infrastructure) > 0 ? module.aws_infrastructure[0].estimated_monthly_cost : null
  ) : var.cloud_provider == "gcp" ? (
    length(module.gcp_infrastructure) > 0 ? module.gcp_infrastructure[0].estimated_monthly_cost : null
  ) : (
    length(module.azure_infrastructure) > 0 ? module.azure_infrastructure[0].estimated_monthly_cost : null
  )
}

# Environment information
output "environment" {
  description = "Environment name"
  value = var.environment
}

output "cloud_provider" {
  description = "Cloud provider used"
  value = var.cloud_provider
}

output "region" {
  description = "Region where resources are deployed"
  value = var.cloud_provider == "aws" ? var.aws_region : (
    var.cloud_provider == "gcp" ? var.gcp_region : var.azure_location
  )
}

# Deployment information
output "deployment_timestamp" {
  description = "Timestamp of the deployment"
  value = timestamp()
}

output "terraform_version" {
  description = "Terraform version used for deployment"
  value = "~> 1.6"
}

# Connection strings (for application configuration)
output "database_connection_string" {
  description = "Database connection string"
  value = "postgresql://${local.db_username}:${random_password.db_password.result}@${var.cloud_provider == "aws" ? (length(module.aws_infrastructure) > 0 ? module.aws_infrastructure[0].db_host : "") : var.cloud_provider == "gcp" ? (length(module.gcp_infrastructure) > 0 ? module.gcp_infrastructure[0].db_host : "") : (length(module.azure_infrastructure) > 0 ? module.azure_infrastructure[0].db_host : "")}:5432/${local.db_name}"
  sensitive = true
}

output "redis_connection_string" {
  description = "Redis connection string"
  value = "redis://${var.cloud_provider == "aws" ? (length(module.aws_infrastructure) > 0 ? module.aws_infrastructure[0].redis_host : "") : var.cloud_provider == "gcp" ? (length(module.gcp_infrastructure) > 0 ? module.gcp_infrastructure[0].redis_host : "") : (length(module.azure_infrastructure) > 0 ? module.azure_infrastructure[0].redis_host : "")}:6379"
  sensitive = true
}