apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{.Name}}-api
  namespace: {{.Name}}
  labels:
    app: {{.Name}}-api
spec:
  replicas: 3
  selector:
    matchLabels:
      app: {{.Name}}-api
  template:
    metadata:
      labels:
        app: {{.Name}}-api
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
      containers:
      - name: {{.Name}}-api
        image: {{.Name}}-api:latest
        ports:
        - containerPort: 8080
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1001
          capabilities:
            drop:
              - ALL
        env:
        - name: APP_ENV
          valueFrom:
            configMapKeyRef:
              name: {{.Name}}-config
              key: APP_ENV
        - name: APP_DEBUG
          valueFrom:
            configMapKeyRef:
              name: {{.Name}}-config
              key: APP_DEBUG
        - name: SERVER_HOST
          valueFrom:
            configMapKeyRef:
              name: {{.Name}}-config
              key: SERVER_HOST
        - name: SERVER_PORT
          valueFrom:
            configMapKeyRef:
              name: {{.Name}}-config
              key: SERVER_PORT
        - name: DB_HOST
          valueFrom:
            configMapKeyRef:
              name: {{.Name}}-config
              key: DB_HOST
        - name: DB_PORT
          valueFrom:
            configMapKeyRef:
              name: {{.Name}}-config
              key: DB_PORT
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: {{.Name}}-config
              key: DB_NAME
        - name: DB_SSLMODE
          valueFrom:
            configMapKeyRef:
              name: {{.Name}}-config
              key: DB_SSLMODE
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: {{.Name}}-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: {{.Name}}-config
              key: REDIS_PORT
        - name: REDIS_DB
          valueFrom:
            configMapKeyRef:
              name: {{.Name}}-config
              key: REDIS_DB
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: {{.Name}}-secret
              key: DB_USER
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{.Name}}-secret
              key: DB_PASSWORD
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: {{.Name}}-secret
              key: JWT_SECRET
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{.Name}}-secret
              key: REDIS_PASSWORD
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
      restartPolicy: Always